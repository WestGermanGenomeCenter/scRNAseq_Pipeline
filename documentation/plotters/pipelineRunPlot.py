import networkx as nx

pipelineRun = nx.MultiDiGraph()
pipelineRun.add_nodes_from([
    #actual rules
    ("cellRanger folder", {"fontname": "calibri", "shape": "folder", "pos": "3,13!"}),
    ("metaData", {"fontname": "calibri", "pos": "2,12!"}),
    ("demultiplexing", {"fontname": "calibri", "pos": "4,12!"}),
    ("mt_p1", {"fontname": "calibri", "pos": "3,11!"}),
    ("mt_p2", {"fontname": "calibri", "pos": "3,10!"}),
    ("doubletRemovalElbowPlot", {"fontname": "calibri", "pos": "3,9!"}),
    ("doubletRemoval", {"fontname": "calibri", "pos": "3,8!"}),
    ("addTPsMerge", {"fontname": "calibri", "pos": "3,7!"}),
    ("SCTransformNormalization", {"fontname": "calibri", "pos": "3,6!"}),
    ("IntegrationDimReduction", {"fontname": "calibri", "pos": "3,5!"}),
    ("RunUMAP", {"fontname": "calibri", "pos": "3,4!"}),
    ("testDiffClusterResolutions", {"fontname": "calibri", "pos": "5,3!"}),
    ("useChosenClusterResolutions", {"fontname": "calibri", "pos": "2,3!"}),
    ("multimodalAnalysis", {"fontname": "calibri", "pos": "-1,2!"}),
    ("markerDiscovery", {"fontname": "calibri", "pos": "3,1!"}),
    ("cellCounting", {"fontname": "calibri", "pos": "1,0!"}),
    ("createShinyApp", {"fontname": "calibri", "pos": "2,0!"}),
    ("DGE", {"fontname": "calibri", "pos": "3,0!"}),
    ("multimodalFeaturePlotting", {"fontname": "calibri", "pos": "4,0!"}),
    #stopper rules
    ("missingMTCutoff", {"fontname": "calibri", "fontcolor":"white", "shape": "doubleoctagon", "fillcolor":"red", "style":"filled", "pos": "5,9!"}),
    ("missingDoubletInfos", {"fontname": "calibri", "fontcolor":"white", "shape": "doubleoctagon", "fillcolor":"red", "style":"filled", "pos": "6,8!"}),
    ("missingConditions", {"fontname": "calibri", "fontcolor":"white", "shape": "doubleoctagon", "fillcolor":"red", "style":"filled", "pos": "5,7!"}),
    ("missingIntPCs", {"fontname": "calibri", "fontcolor":"white", "shape": "doubleoctagon", "fillcolor":"red", "style":"filled", "pos": "5,4!"}),
    ("missingResolutionsNeighPC", {"fontname": "calibri", "fontcolor":"white", "shape": "doubleoctagon", "fillcolor":"red", "style":"filled", "pos": "6,3!"}),
    ("missingChosenResolution", {"fontname": "calibri", "fontcolor":"white", "shape": "doubleoctagon", "fillcolor":"red", "style":"filled", "pos": "3,3!"}),

])
pipelineRun.add_edges_from([
    # HTO
    ("cellRanger folder", "demultiplexing", {"color": "green", "style": "dashed"}),
    ("demultiplexing", "mt_p1", {"color": "green"}),
    ("mt_p1", "mt_p2", {"color": "green", "style": "dashed"}),
    ("mt_p2", "doubletRemovalElbowPlot", {"color": "green"}),
    ("doubletRemovalElbowPlot", "addTPsMerge", {"color": "green", "style": "dashed"}),
    ("addTPsMerge", "SCTransformNormalization", {"color": "green"}),
    ("SCTransformNormalization", "IntegrationDimReduction", {"color": "green"}),
    ("IntegrationDimReduction", "RunUMAP", {"color": "green", "style": "dashed"}),
    ("RunUMAP", "testDiffClusterResolutions", {"color": "green", "style": "dashed"}),
    ("RunUMAP", "useChosenClusterResolutions", {"color": "green", "style": "dashed"}),
    ("useChosenClusterResolutions", "markerDiscovery", {"color": "green"}),
    ("markerDiscovery", "cellCounting", {"color": "green"}),
    ("markerDiscovery", "createShinyApp", {"color": "green"}),
    ("markerDiscovery", "DGE", {"color": "green"}),
    # not multimodal
    ("cellRanger folder", "metaData", {"color": "blue", "style": "dashed"}),
    ("metaData", "mt_p1", {"color": "blue"}),
    ("mt_p1", "mt_p2", {"color": "blue", "style": "dashed"}),
    ("mt_p2", "doubletRemovalElbowPlot", {"color": "blue"}),
    ("doubletRemovalElbowPlot", "doubletRemoval", {"color": "blue", "style": "dashed"}),
    ("doubletRemoval", "addTPsMerge", {"color": "blue", "style": "dashed"}),
    ("addTPsMerge", "SCTransformNormalization", {"color": "blue"}),
    ("SCTransformNormalization", "IntegrationDimReduction", {"color": "blue"}),
    ("IntegrationDimReduction", "RunUMAP", {"color": "blue", "style": "dashed"}),
    ("RunUMAP", "testDiffClusterResolutions", {"color": "blue", "style": "dashed"}),
    ("RunUMAP", "useChosenClusterResolutions", {"color": "blue", "style": "dashed"}),
    ("useChosenClusterResolutions", "markerDiscovery", {"color": "blue"}),
    ("markerDiscovery", "cellCounting", {"color": "blue"}),
    ("markerDiscovery", "createShinyApp", {"color": "blue"}),
    ("markerDiscovery", "DGE", {"color": "navy"}),
    # multimodal
    ("cellRanger folder", "metaData", {"color": "gold", "style": "dashed"}),
    ("metaData", "mt_p1", {"color": "gold"}),
    ("metaData", "multimodalAnalysis", {"color": "gold"}),
    ("mt_p1", "mt_p2", {"color": "gold", "style": "dashed"}),
    ("mt_p2", "doubletRemovalElbowPlot", {"color": "gold"}),
    ("doubletRemovalElbowPlot", "doubletRemoval", {"color": "gold", "style": "dashed"}),
    ("doubletRemoval", "addTPsMerge", {"color": "gold", "style": "dashed"}),
    ("addTPsMerge", "SCTransformNormalization", {"color": "gold"}),
    ("SCTransformNormalization", "IntegrationDimReduction", {"color": "gold"}),
    ("IntegrationDimReduction", "RunUMAP", {"color": "gold", "style": "dashed"}),
    ("RunUMAP", "testDiffClusterResolutions", {"color": "gold", "style": "dashed"}),
    ("RunUMAP", "useChosenClusterResolutions", {"color": "gold", "style": "dashed"}),
    ("useChosenClusterResolutions", "multimodalAnalysis", {"color": "gold"}),
    ("multimodalAnalysis", "markerDiscovery", {"color": "gold"}),
    ("markerDiscovery", "multimodalFeaturePlotting", {"color": "gold"}),
    ("markerDiscovery", "cellCounting", {"color": "gold"}),
    ("markerDiscovery", "createShinyApp", {"color": "gold"}),
    ("markerDiscovery", "DGE", {"color": "darkgoldenrod"}),
    ("mt_p1", "missingMTCutoff", {"fontname": "calibri", "shape": "doubleoctagon", "style": "dotted",
                                  "label": "sampleInputs.mtCutoff", "fontcolor": "firebrick"}),
    ("doubletRemovalElbowPlot", "missingDoubletInfos", {"fontname": "calibri", "shape": "doubleoctagon", "style": "dotted",
                                                        "label": "sampleInputs.dbElbowPlot", "fontcolor": "firebrick"}),
    ("doubletRemoval", "missingConditions", {"fontname": "calibri", "shape": "doubleoctagon", "style": "dotted",
                                             "label": "otherMetaName", "fontcolor": "firebrick"}),
    ("doubletRemovalElbowPlot", "missingConditions", {"fontname": "calibri", "shape": "doubleoctagon", "style": "dotted"}),
    ("IntegrationDimReduction", "missingIntPCs", {"fontname": "calibri", "shape": "doubleoctagon", "style": "dotted",
                                                  "label": "integrationPCs", "fontcolor": "firebrick"}),
    ("RunUMAP", "missingResolutionsNeighPC", {"fontname": "calibri", "shape": "doubleoctagon", "style": "dotted",
                                              "label": "findNeighborsPCs,\nchoosableResolutions", "fontcolor": "firebrick"}),
    ("RunUMAP", "missingChosenResolution", {"fontname": "calibri", "shape": "doubleoctagon", "style": "dotted",
                                            "label": "findNeighborsPCs\nchosenResolution", "fontcolor": "firebrick"}),
])
# Legend as Subgraph
pipelineRun.add_nodes_from([
    ("l1", {"style": "invis", "pos": "6.7,12!"}),
    ("l2", {"style": "invis", "pos": "6.7,11!"}),
    ("ns1", {"style": "invis", "pos": "7.9,13!"}),
    ("ns2", {"style": "invis", "pos": "7.9,12!"}),
    ("nm", {"style": "invis", "pos": "7.9,11!"}),
    ("ms1", {"style": "invis", "pos": "9,13!"}),
    ("ms2", {"style": "invis", "pos": "9,12!"}),
    ("mm", {"style": "invis", "pos": "9,11!"}),
    ("hto", {"style": "invis", "pos": "9,10!"}),
    ("i1", {"style": "invis", "pos": "10.1,13!"}),
    ("i2", {"style": "invis", "pos": "10.1,12!"}),
    ("m", {"style": "invis", "pos": "10.1,11!"}),
])
pipelineRun.add_edges_from([
    ("l1", "l2", {"color": "white", "label": "Legend:", "fontname": "calibri"}),
    ("ns1", "ns2", {"color": "blue", "label": "all\nnon-multimodal", "fontname": "calibri"}),
    ("ns2", "nm", {"color": "navy", "label": "multi-sampled\nnon-multimodal", "fontname": "calibri"}),
    ("ms1", "ms2", {"color": "gold", "label": "all\nmultimodal", "fontname": "calibri"}),
    ("ms2", "mm", {"color": "darkgoldenrod", "label": "multi-sampled\nmultimodal", "fontname": "calibri"}),
    ("mm", "hto", {"color": "green", "label": "HTO", "fontname": "calibri"}),
    ("i1", "i2", {"color": "black", "style": "dashed",
                   "label": "config\ninput\nthere", "fontname": "calibri", "fontcolor": "firebrick"}),
    ("i2", "m", {"color": "black", "style": "dotted",
                "label": "config\ninput\nmissing", "fontname": "calibri", "fontcolor": "firebrick"})
])
pipelineRun.graph["graph"] = {"size": "8.00,11.00"}

